@using FJDPXT.Models;
@using FJDPXT.EntityClass;
@{
    Layout = null;
    //接收控制器传递的参数
    List<FlightCabinInfo> flightCabinInfos = ViewBag.flightCabinInfos;//航班舱位信息
    int passengerNum = ViewBag.passengerNum;//旅客数
    List<S_PassengerType> passengerTypes = ViewBag.passengerTypes;//旅客类型
    List<S_CertificatesType> certificatesTypes = ViewBag.certificatesTypes;//证件类型
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EnterInfoPage</title>
    <link href="~/Content/bootstrap-4.1.3-dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/layui/css/layui.css" rel="stylesheet" />
    <link href="~/Content/app-assets/fonts/simple-line-icons/style.css" rel="stylesheet" />
    <style>
        div{
            font-family: "华文彩云";
        }
        h4{
            font-family: "华文彩云";
        }
        h5{
            font-family: "华文彩云";
        }
        p{
            font-family: "华文彩云";
        }
         label{
            font-family: "华文彩云";
        }
        input{
            font-family: "华文彩云";
        }
        tr{
            font-family: "华文彩云";
        }
        td{
            font-family: "华文彩云";
        }
        th{
            font-family: "华文彩云";
        }
        b{
            font-family: "华文彩云";
        }
        button{
            font-family: "华文彩云";
        }
        a{
            font-family: "华文彩云";
        }
        h2{
            font-family: "华文彩云";
        }
        dd{
            font-family: "华文彩云";
        }
        span{
            font-family: "华文彩云";
        }
        select{
            font-family: "华文彩云";
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row mt-4">
            <div class="col-12 text-center">
                <h2>PNR信息录入</h2>
            </div>
        </div>
        @* 旅客资料 *@
        <div class="card">
            <div class="card-header text-center">
                <b>旅客资料</b>
            </div>
            <div class="card-body">
                @*遍历旅客数 生成旅客信息输入表单*@
                @for (int i = 0; i < passengerNum; i++)
                {
                    <form class="row mb-2" id="@("formPassenger"+i)">
                        @* 隐藏域 PNR旅客编号*@
                        <input type="hidden" name="passengerNo" value="@(i+1)" />
                        <div class="col-12">
                            <div class="row">
                                <!--序号-->
                                <label class="col-1 col-form-label">@(i + 1)</label>
                                <!--旅客姓名-->
                                <label class="col-3 col-lg-2 col-xl-1 col-form-label">旅客姓名<sup class="text-danger">*</sup></label>
                                <div class="col-8 col-lg-2 col-xl-3">
                                    <input type="text" class="form-control" name="passengerName" placeholder="填写旅客姓名" id="@("passengerName"+i)" />
                                </div>
                                <!--旅客类型-->
                                <div class="col-11 col-lg-2 offset-1 offset-lg-0  mt-2 mt-lg-0">
                                    <select class="form-control" name="passengerTypeID" id="@("passengerTypeID"+i)">
                                        @*Razor标记语言生成下拉框的option*@
                                        @foreach (S_PassengerType passengerType in passengerTypes)
                                        {
                                            <option value="@passengerType.passengerTypeID">@passengerType.passengerType.Trim()</option>
                                        }
                                    </select>
                                </div>
                                <!--证件类型-->
                                <label class="col-3 col-lg-2 col-xl-1 offset-1 offset-lg-0 mt-2 mt-lg-0 col-form-label">证件类型<sup class="text-danger">*</sup></label>
                                <div class="col-8 col-lg-3 col-xl-4  mt-2 mt-lg-0">
                                    <select class="form-control" name="certificatesTypeID" id="@("certificatesTypeID"+i)">
                                        @*Razor标记语言生成下拉框的option*@
                                        @foreach (S_CertificatesType certificatesType in certificatesTypes)
                                        {
                                            <option value="@certificatesType.certificatesTypeID">@certificatesType.certificatesType.Trim()</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="row mt-1">
                                <div class="col-1"></div>
                                <!--常旅客号-->
                                <label class="col-3 col-lg-2 col-xl-1 col-form-label">常旅客号:</label>
                                <div class="col-8 col-lg-2 col-xl-3">
                                    <input type="text" class="form-control" name="frequentPassengerNo" placeholder="没有常旅客卡号的请不填" id="@("frequentPassengerNo"+i)" />
                                </div>

                                <!--证件号码-->
                                <label class="col-3 col-lg-2 col-xl-1 offset-1 offset-lg-2 mt-2 mt-lg-0 col-form-label">证件号码<sup class="text-danger">*</sup></label>
                                <div class="col-8 col-lg-3 col-xl-4 mt-2 mt-lg-0">
                                    <input type="text" class="form-control" name="certificatesCode" placeholder="填写旅客证件号" id="@("certificatesCode"+i)" />
                                </div>
                            </div>
                        </div>
                    </form>
                }               
            </div>
        </div>

        @* 联系人信息 *@
        <div class="card">
            <div class="card-header text-center">
                <b>联系人信息</b>
            </div>
            <div class="card-body">
                <form class="row" id="formContact">
                    <!--联系人姓名-->
                    <label class="col-4 col-md-2 col-form-label">联系人姓名<sup class="text-danger">*</sup></label>
                    <div class="col-8 col-md-4">
                        <input type="text" class="form-control" name="contactName" id="contactName" />
                    </div>
                    <!--联系人电话-->
                    <label class="col-4 col-md-2 mt-2 mt-md-0 col-form-label">联系人电话<sup class="text-danger">*</sup></label>
                    <div class="col-8 col-md-4 mt-2 mt-md-0">
                        <input type="text" class="form-control" name="contactPhone" id="contactPhone" />
                    </div>
                </form>
            </div>
        </div>

        @* 航班信息 *@
        <div class="card">
            <div class="card-header text-center">
                航班信息
            </div>
            <div class="card-body p-2">
                <table class="table table-bordered text-center" id="tableFlight" lay-filter="tableFlight">
                    <thead>
                        <tr>
                            <th>序号</th>
                            <th>航班号</th>
                            <th>始发地 - 目的地</th>
                            <th>起飞 - 到达</th>
                            <th>日期</th>
                            <th>舱位</th>
                            <th>价格(人民币)</th>
                            <th>座位数</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < flightCabinInfos.Count; i++)
                        {
                            FlightCabinInfo flightCabinInfo = flightCabinInfos[i];
                            //将航班起飞时间和降落时间转为字符串  TimeSpan转字符串
                            string strStartTime = flightCabinInfos[i].departureTime.Value.ToString(@"hh\:mm");//@是禁止转义，剥夺\的转义权限,由于C#的日期代码"hh\:mm\:ss"，但是\又有转义的意思，所以加@
                            string strEndTime = flightCabinInfos[i].arrivalTime.Value.ToString(@"hh\:mm");//或者"hh\\:mm",这样
                            //判断降落时间是否已经是第二天（本系统都是国内航线，目前最长直飞航线也才5小时左右）
                            //由于保存保存的是时间格式，没有日期，所有直接使用 如果起飞时间大于降落时间的的就认为降落时间是第二天了 需要显示+1
                            bool isNextDay = flightCabinInfos[i].arrivalTime.Value.TotalMinutes < flightCabinInfos[i].departureTime.Value.TotalMinutes;

                            <tr>
                                <!--序号-->
                                <td>@(i+1)</td>
                                <!--航班号-->
                                <td>@flightCabinInfo.flightCode.Trim()</td>
                                <!--始发地 - 目的地-->
                                <td>
                                    @flightCabinInfo.orangeCity 到 @flightCabinInfo.destinationCity
                                </td>
                                <!--起飞 - 到达-->
                                <td>
                                    @strStartTime 到 @strEndTime
                                    @if (isNextDay)
                                    {
                                        <sup class="text-danger">+1</sup>
                                    }
                                </td>
                                <!--日期-->
                                <td>
                                    @flightCabinInfo.flightDate.Value.ToString("yyyy-MM-dd")
                                </td>
                                <!--舱位-->
                                <td>
                                    @flightCabinInfo.cabinTypeCode.Trim()
                                </td>
                                <!--价格(人民币)-->
                                <td>
                                    ￥@flightCabinInfo.cabinPrice
                                </td>
                                <!--座位数 (订座数 旅客数)-->
                                <td>@passengerNum</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        @* 出票组 *@
        <div class="card">
            <div class="card-header text-center">
                <b>出票组</b>
            </div>
            <div class="card-body">
                <form class="row">
                    <label class="col-2 col-lg-1 col-form-label">TK:<sup class="text-danger">*</sup></label>
                    <div class="col-5 col-lg-4">
                        <input type="text" class="form-control" name="ticketingInfo" id="ticketingInfo" value="TL" />
                    </div>
                    <label class="col-5 col-lg-2 col-form-label">(格式：TL/0800/21jun)</label>
                </form>
            </div>
        </div>

        @* 其他信息 *@
        <div class="card">
            <div class="card-header text-center">
                <b>其他信息</b>
            </div>
            <div class="card-body p-2">
                <form class="row">
                    <div class="col-12">
                        <textarea class="form-control" rows="5" name="PNROtherInfo" id="PNROtherInfo"></textarea>
                    </div>
                </form>
                <div class="row">
                    <label class="col-12 col-form-label">
                        注意：请在其他栏内直接输入上面没有涉及的指令，包括婴儿输入指令。
                    </label>
                </div>
            </div>
        </div>

        @* 操作按钮部分 *@
        <div class="row justify-content-center mt-3">
            <div class="col-2 col-lg-1">
                <button type="button" class="btn btn-primary btn-block" id="btnCreatePNR">确认</button>
            </div>
            <div class="col-3 col-lg-2">
                <button type="button" class="btn btn-primary btn-block" id="btnRest">重新输入</button>
            </div>
            <div class="col-3 col-lg-2">
                <button type="button" class="btn btn-primary btn-block" id="btnReelection">重选舱位</button>
            </div>
        </div>
    </div>

    <script src="~/Content/app-assets/vendors/js/core/jquery-3.3.1.min.js"></script>
    <script src="~/Content/bootstrap-4.1.3-dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/layui/layui.js"></script>
    <script src="~/Content/js/customfunction.js"></script>

    <script>
        var layer;
        $(function () {
            //==============PNR复制部分
            var isCopy = false;
            //获取PNR复制标志
            var pnrCopy = sessionStorage.getItem("copyPNR");
            //获取旅客&联系人信息
            var passengerInfors = JSON.parse(sessionStorage.getItem("passengerInfors"));
            var contactInfor = JSON.parse(sessionStorage.getItem("contactInfor"));
            console.log(passengerInfors);

            if (pnrCopy != null && pnrCopy == "true") {
                isCopy = true;
                //旅客信息
                if (passengerInfors.length != 0 && sessionStorage.getItem("passengerInfors") != "[]") {
                    for (var i = 0; i < passengerInfors.length; i++) {
                        $("#passengerName" +i).val(passengerInfors[i].passengerName);
                        $("#passengerTypeID" + i).val(passengerInfors[i].passengerTypeID);
                        $("#certificatesTypeID" + i).val(passengerInfors[i].certificatesTypeID);
                        $("#frequentPassengerNo" + i).val(passengerInfors[i].frequentPassengerNo);
                        $("#certificatesCode" + i).val(passengerInfors[i].certificatesCode);
                        //设置文本框为readonly只读的意思，下拉框为disabled,如果设置disabled属性的话在页面上无法获取到他的值，导致下面有些判断不能执行
                        $("#passengerName" + i).prop("readonly", "readonly");
                        $("#passengerTypeID" + i).prop("disabled", "disabled");
                        $("#certificatesTypeID" + i).prop("disabled", "disabled");
                        $("#frequentPassengerNo" + i).prop("readonly", "readonly");
                        $("#certificatesCode" + i).prop("readonly", "readonly");
                    }
                }

                //联系人信息
                if (contactInfor != undefined && sessionStorage.getItem("contactInfor") != "{}") {
                    $("#contactName").val(contactInfor.contactName);//联系人姓名
                    $("#contactPhone").val(contactInfor.contactPhone);//联系电话
                    //设置为只读 readonly
                    $("#contactName").prop("readonly", "readonly");
                    $("#contactPhone").prop("readonly", "readonly");
                }
            }
            //加载layui的模块
            layui.use('layer', function () {
                layer = layui.layer;
            });
            var strFlightCabinAndPassengerNum = sessionStorage.getItem("flightCabinAndPassengerNum");//到SelectFlightPage.cshtml中获取保存的旅客信息，getItem获取的意思
            var flightCabinAndPassengerNum = JSON.parse(strFlightCabinAndPassengerNum);//转格式
            $("#btnCreatePNR").click(function () {
                //==============================解决disabled属性在页面上获取不到值的问题,移除属性
                //判断是否来自复制
                if (isCopy) {
                    //循环遍历
                    for (var i = 0; i < passengerInfors.length; i++) {
                        //移除属性
                        $("#passengerTypeID" + i).removeAttr("disabled");
                        $("#certificatesTypeID" + i).removeAttr("disabled");
                    }
                }
                //==============================
                var passengers = [];
                //循环获取flightCabinAndPassengerNum里的旅客信息
                for (var i = 0; i < flightCabinAndPassengerNum.passengerNum ; i++) {
                    var passenger = {};//定义一个空对象,存放旅客数据
                    //使用JQuery的序列化表单,获取表单数据
                    var formData = $("#formPassenger" + i).serializeArray();
                    $.each(formData, function (index, item) {
                        //向passenger对象添加属性 属性名称为item.name,属性的值为item.value
                        passenger[item.name] = item.value;
                    });
                    //passengers是数组，passenger是将序列化表单通过each方法转成对象
                    passengers.push(passenger);
                    //console.log(passengers);
                }
                //=联系人信息
                //联系人姓名
                var contactName = $("#contactName").val();
                //联系人电话
                var contactPhone = $("#contactPhone").val();

                //=出票组
                var ticketingInfo = $("#ticketingInfo").val();
                //=其他信息
                var PNROtherInfo = $("#PNROtherInfo").val();

                //===数据验证
                //==旅客信息
                var adultNum = 0;//成人个数
                //遍历passengers数组的所有对象数据
                for (var i = 0; i < passengers.length; i++) {
                    //验证用户姓名是否输入
                    if (passengers[i].passengerName == undefined || passengers[i].passengerName == null || passengers[i].passengerName == "") {
                        myAlert("请输入第" + (i+1) + "个的旅客姓名", "提示");
                        return;
                    }
                    //证件号是否填写
                    if (passengers[i].certificatesCode == undefined || passengers[i].certificatesCode == null ||
                        passengers[i].certificatesCode == "") {
                        myAlert("请填写第" + (i + 1) + "个旅客的证件号", "提示");
                        return;
                    }
                    //判断身份证号码是否正确
                    if (passengers[i].certificatesTypeID == 1 && !(idCardNo(passengers[i].certificatesCode))) {
                        myAlert("第" + (i + 1) + "个旅客的身份证号不正确,请检查", "提示");
                        return;
                    }
                    //当证件号是身份证时,判断旅客的年龄和所选的 成人/儿童是否相符
                    if (passengers[i].certificatesTypeID == 1) {
                        //根据身份证号获取旅客年龄,getAgeByIdCard是创建好的一个js文件方法
                        var passengerAge = getAgeByIdCard(passengers[i].certificatesCode);
                        //旅客类型为成人,检查年龄是否大于等于18。成人儿童下拉框passengerTypeID
                        if (passengers[i].passengerTypeID == 1 && passengerAge < 18) {
                            myAlert("第" + (i + 1) + "个旅客的年龄小于18,与所选择的[成人]身份不符,请检查", "提示");
                            return;
                        }
                        if (passengers[i].passengerTypeID == 2 && passengerAge >= 18) {
                            myAlert("第" + (i + 1) + "个旅客的年龄大于或等于18，与所选择的[儿童]身份不符，请检查", "提示");
                            return;
                        }
                        //===判断是否与其他旅客的身份证号相同
                        for (var j = i+1; j <passengers.length; j++) {
                            if(passengers[j].certificatesTypeID==1){
                                if(passengers[j].certificatesCode.trim()==passengers[i].certificatesCode.trim()){
                                    myAlert("第"+(i + 1)+"个与第"+(j+1)+"个身份证相同，请检查","提示");
                                    return;
                                }
                            }
                        }
                    }
                    //统计成年人数
                    if (passengers[i].passengerTypeID == 1) {
                        adultNum++;
                    }
                }
                //判断成年人人数
                if (adultNum == 0) {
                    myAlert("至少有一个成年人", "提示");
                    return;
                }
                //联系人姓名，联系人电话
                if (contactName == undefined || contactName == null || contactName == "") {
                    myAlert("请输入联系人姓名", "提示");
                    return;
                }
                if (contactPhone == undefined || contactPhone == null || contactPhone == "" || contactPhone.length>11) {
                    myAlert("请输入联系人电话(不能大于11位)", "提示");
                    return;
                }
                var layerIndex = layer.load();
                $.post("@Url.Content("~/PNR/PNRAppointment/EnterInfo")", {
                    passengers: passengers,//旅客所有信息
                    contactName: contactName,//旅客姓名
                    contactPhone: contactPhone,//旅客电话
                    ticketingInfo: ticketingInfo,//出票组信息
                    PNROtherInfo: PNROtherInfo,//其他信息
                    flightCabinIDs: flightCabinAndPassengerNum.flightCabinIDs//上一个页面选择的航班舱位ID数组,校验
                }, function (msg) {
                    layer.close(layerIndex);//关闭加载层
                    if (msg.State) {
                        console.log(msg.Code);//Code等于PNRID，控制台预定成功后返回的值
                        //===================清除PNR复制sessionStorage数据
                        sessionStorage.removeItem("copyPNR");
                        myAlert(msg.Text, "提示", 1);
                        //跳转到PnrInfoConfirm PNR信息确认
                        window.location.replace("@Url.Content("~/PNR/PNRAppointment/PnrInfoConfirm?PNRID=")" + msg.Code);//将Code这个数据赋值给PNRID一起传到下一个方法
                    } else {
                        myAlert(msg.Text, "提示", 2);
                    }

                });
            });
            //重置表单，重新输入
            $("#btnRest").click(function () {
                //each每个的意思，每个form
                $("form").each(function () {
                    //reset重置，清空
                    this.reset();
                });
            });

            //回到上一个页面
            $("#btnReelection").click(function () {
                //window.location.href = "/PNR/PNRAppointment/SelectFlightPage";//href路径
                window.location.replace("@Url.Content("~/PNR/PNRAppointment/SelectFlightPage")");//replace替换
            });
        });
    </script>
</body>
</html>
